{
    "contents" : "# Week 4, Recitation\n\n\n# VIDEO 2\n\n# Read in data\nboston = read.csv(\"boston.csv\")\nstr(boston)\n\n# Plot observations\nplot(boston$LON, boston$LAT)\n\n# Tracts alongside the Charles River\npoints(boston$LON[boston$CHAS==1], boston$LAT[boston$CHAS==1], col=\"blue\", pch=19)\n\n# Plot MIT\npoints(boston$LON[boston$TRACT==3531],boston$LAT[boston$TRACT==3531],col=\"red\", pch=20)\n\n# Plot polution\nsummary(boston$NOX)\npoints(boston$LON[boston$NOX>=0.55], boston$LAT[boston$NOX>=0.55], col=\"green\", pch=20)\n\n# Plot prices\nplot(boston$LON, boston$LAT)\nsummary(boston$MEDV)\npoints(boston$LON[boston$MEDV>=21.2], boston$LAT[boston$MEDV>=21.2], col=\"red\", pch=20)\n\n\n\n# VIDEO 3\n\n# Linear Regression using LAT and LON\nplot(boston$LAT, boston$MEDV)\nplot(boston$LON, boston$MEDV)\nlatlonlm = lm(MEDV ~ LAT + LON, data=boston)\nsummary(latlonlm)\n\n# Visualize regression output\nplot(boston$LON, boston$LAT)\npoints(boston$LON[boston$MEDV>=21.2], boston$LAT[boston$MEDV>=21.2], col=\"red\", pch=20)\n\nlatlonlm$fitted.values\npoints(boston$LON[latlonlm$fitted.values >= 21.2], boston$LAT[latlonlm$fitted.values >= 21.2], col=\"blue\", pch=\"$\")\n\n\n\n# Video 4\n\n# Load CART packages\nlibrary(rpart)\nlibrary(rpart.plot)\n\n# CART model\nlatlontree = rpart(MEDV ~ LAT + LON, data=boston)\nprp(latlontree)\n\n# Visualize output\nplot(boston$LON, boston$LAT)\npoints(boston$LON[boston$MEDV>=21.2], boston$LAT[boston$MEDV>=21.2], col=\"red\", pch=20)\n\nfittedvalues = predict(latlontree)\npoints(boston$LON[fittedvalues>21.2], boston$LAT[fittedvalues>=21.2], col=\"blue\", pch=\"$\")\n\n# Simplify tree by increasing minbucket\nlatlontree = rpart(MEDV ~ LAT + LON, data=boston, minbucket=50)\nplot(latlontree)\ntext(latlontree)\n\n# Visualize Output\nplot(boston$LON,boston$LAT)\nabline(v=-71.07)\nabline(h=42.21)\nabline(h=42.17)\npoints(boston$LON[boston$MEDV>=21.2], boston$LAT[boston$MEDV>=21.2], col=\"red\", pch=20)\n\n\n\n# VIDEO 5\n\n# Let's use all the variables\n\n# Split the data\nlibrary(caTools)\nset.seed(123)\nsplit = sample.split(boston$MEDV, SplitRatio = 0.7)\ntrain = subset(boston, split==TRUE)\ntest = subset(boston, split==FALSE)\n\n# Create linear regression\nlinreg = lm(MEDV ~ LAT + LON + CRIM + ZN + INDUS + CHAS + NOX + RM + AGE + DIS + RAD + TAX + PTRATIO, data=train)\nsummary(linreg)\n\n# Make predictions\nlinreg.pred = predict(linreg, newdata=test)\nlinreg.sse = sum((linreg.pred - test$MEDV)^2)\nlinreg.sse\n\n# Create a CART model\ntree = rpart(MEDV ~ LAT + LON + CRIM + ZN + INDUS + CHAS + NOX + RM + AGE + DIS + RAD + TAX + PTRATIO, data=train)\nprp(tree)\n\n# Make predictions\ntree.pred = predict(tree, newdata=test)\ntree.sse = sum((tree.pred - test$MEDV)^2)\ntree.sse\n\n\n\n# Video 7\n\n# Load libraries for cross-validation\nlibrary(caret)\nlibrary(e1071)\n\n# Number of folds\ntr.control = trainControl(method = \"cv\", number = 10)\n\n# cp values\ncp.grid = expand.grid( .cp = (0:10)*0.001)\n\n# What did we just do?\n1*0.001 \n10*0.001 \n0:10\n0:10 * 0.001\n\n# Cross-validation\ntr = train(MEDV ~ LAT + LON + CRIM + ZN + INDUS + CHAS + NOX + RM + AGE + DIS + RAD + TAX + PTRATIO, data = train, method = \"rpart\", trControl = tr.control, tuneGrid = cp.grid)\n\n# Extract tree\nbest.tree = tr$finalModel\nprp(best.tree)\n\n# Make predictions\nbest.tree.pred = predict(best.tree, newdata=test)\nbest.tree.sse = sum((best.tree.pred - test$MEDV)^2)\nbest.tree.sse\n\n",
    "created" : 1399672891202.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "304246074",
    "id" : "2755B7C4",
    "lastKnownWriteTime" : 1399672890,
    "path" : "C:/Users/rnield/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/FH6BYT5B/Week4_Recitation[1].R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}